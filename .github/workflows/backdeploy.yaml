name: Deploy backend

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - ".github/workflows/backdeploy.yaml"

env:
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.CI_CD_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.CI_CD_AWS_SECRET_ACCESS_KEY }}
  S3_BUCKET: ${{ vars.IAC_BUCKET_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore gradle dependencies
        uses: actions/cache@v4
        with:
          path: "~/.gradle"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/build.gradle.kts') }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      - name: Add version info
        run: |
          export GIT_HASH=$(git rev-parse --short HEAD)
          sed -i "s|version: 1.0.0|version: ${GIT_HASH}|g" src/main/resources/application.yaml
      - name: Build jar
        run: ./gradlew build -x test
      - name: Build and push to ECR
        run: |
          ./gradlew clean build --info -x test

          export STAGE=prod
          GIT_HASH=$(git rev-parse --short HEAD)

          # Get value from ssm and export it
          ECR_URL_PARAM=$(aws ssm get-parameter --name "/$STAGE/ecr/url/statistics_server")
          ECR_URL=$(echo $ECR_URL_PARAM | jq -r '.Parameter.Value')

          # Before and after the bar
          ECR_URL_ROOT="${ECR_URL%%/*}"
          ECR_URL_SPEC="${ECR_URL##*/}"

          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin $ECR_URL_ROOT
          docker build -t $ECR_URL_SPEC .

          docker tag $ECR_URL_SPEC:latest $ECR_URL:latest
          docker tag $ECR_URL_SPEC:latest $ECR_URL:$GIT_HASH
          docker push $ECR_URL:latest
          docker push $ECR_URL:$GIT_HASH

      - name: Blue green deployment
        run: |
          aws deploy create-deployment \
            --application-name statistics-server-code-deploy-app-prod \
            --deployment-group-name statistics-server-code-deployment-group-prod \
            --s3-location bucket=$S3_BUCKET,key=app-spec/statistics-spec-prod.yaml,bundleType=YAML
